-- phpMyAdmin SQL Dump
-- version 4.8.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Jul 31, 2018 at 10:55 AM
-- Server version: 10.1.34-MariaDB
-- PHP Version: 7.2.7

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `phpcoderdb`
--

-- --------------------------------------------------------

--
-- Table structure for table `categories`
--

CREATE TABLE `categories` (
  `category_id` int(11) NOT NULL,
  `name` varchar(100) NOT NULL,
  `description` varchar(200) NOT NULL,
  `created` datetime NOT NULL,
  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `categories`
--

INSERT INTO `categories` (`category_id`, `name`, `description`, `created`, `modified`) VALUES
(1, 'Beginning', 'Bắt đầu với lập trình Web', '2018-07-24 00:00:00', '2018-07-24 06:45:43'),
(2, 'PHP', 'Từng bước lập trình PHP', '2018-07-24 00:00:00', '2018-07-24 07:46:10'),
(3, 'JScript', 'Từng bước với Javascript', '2018-07-29 00:00:00', '2018-07-29 12:44:41');

-- --------------------------------------------------------

--
-- Table structure for table `courses`
--

CREATE TABLE `courses` (
  `course_id` int(11) NOT NULL,
  `name` varchar(150) NOT NULL,
  `description` varchar(250) NOT NULL,
  `content` text NOT NULL,
  `created` datetime NOT NULL,
  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `price` int(11) NOT NULL,
  `image` varchar(200) NOT NULL,
  `category_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `courses`
--

INSERT INTO `courses` (`course_id`, `name`, `description`, `content`, `created`, `modified`, `price`, `image`, `category_id`, `user_id`) VALUES
(12, 'PHP CRUD Tutorial for Beginners – Step By Step Guide! ', 'Previously, we learned how to run your first PHP script. This time, we we learn CRUD operations with PHP and MySQL. CRUD stands for Create, Read, Update and Delete database records.', '<p>Previously, we learned <a href=\"https://www.codeofaninja.com/2013/06/how-to-run-a-php-script.html\">how to run your first PHP script</a>. This time, we we learn CRUD operations with PHP and MySQL. CRUD stands for <strong>C</strong>reate, <strong>R</strong>ead, <strong>U</strong>pdate and <strong>D</strong>elete database records.</p>\r\n\r\n<p><strong>We will cover the following topics</strong></p>\r\n\r\n<p>1.0 Overview<br />\r\n2.0 Program output<br />\r\n3.0 File structure</p>\r\n\r\n<p><strong>4.0 Prepare the database</strong><br />\r\n4.1 Create the database<br />\r\n4.2 Create the database table<br />\r\n4.3 Dump sample data on the table<br />\r\n4.4 Create database connection file<br />\r\n4.5 Output</p>\r\n\r\n<p><strong>5.0 Create or insert record in PHP</strong><br />\r\n5.1 HTML5 boilerplate for create.php<br />\r\n5.2 HTML form to input new record data<br />\r\n5.3 Code create a new record<br />\r\n5.4 Output</p>\r\n\r\n<p><strong>6.0 Read records in PHP</strong><br />\r\n6.1 Basic HTML code for index.php<br />\r\n6.2 Read records from the database<br />\r\n6.3 Add HTML table with heading<br />\r\n6.4 Add HTML table body<br />\r\n6.5 Output</p>\r\n\r\n<p><strong>7.0 Read one record in PHP</strong><br />\r\n7.1 Basic HTML code for read_one.php<br />\r\n7.2 Read records from the database<br />\r\n7.3 Display record details<br />\r\n7.4 Output</p>\r\n\r\n<p><strong>8.0 Update record in PHP</strong><br />\r\n8.1 Basic HTML code for update.php<br />\r\n8.2 Read a record by ID parameter<br />\r\n8.3 HTML form to update a record<br />\r\n8.4 Code to update the record<br />\r\n8.5 Output</p>\r\n\r\n<p><strong>9.0 Delete record in PHP</strong><br />\r\n9.1 Tell the user if record was deleted<br />\r\n9.2 JavaScript to confirm record deletion<br />\r\n9.3 Delete record from the database</p>\r\n\r\n<p><strong>10.0 Pagination in PHP</strong><br />\r\n10.1 Set pagination variables<br />\r\n10.2 Add LIMIT clause in SELECT query<br />\r\n10.3 Count total number of records<br />\r\n10.4 Include paging file<br />\r\n10.5 Create paging.php<br />\r\n10.6 Add first page button<br />\r\n10.7 Add clickable page numbers<br />\r\n10.8 Add last page button<br />\r\n10.9 Output</p>\r\n\r\n<p><strong>11.0 File upload in PHP</strong><br />\r\n11.1 Add HTML &quot;file&quot; field<br />\r\n11.2 Add &quot;image&quot; field<br />\r\n11.3 Set variables for file upload<br />\r\n11.4 Make sure submitted file is a real image<br />\r\n11.5 Make sure certain file types are allowed<br />\r\n11.6 Make sure file does not exist<br />\r\n11.7 make sure submitted file is not too large<br />\r\n11.8 Make sure the &#39;uploads&#39; folder exists<br />\r\n11.9 Try to upload the file<br />\r\n11.10 Output</p>\r\n\r\n<p><strong>12.0 Show uploaded image in PHP</strong><br />\r\n12.1 Add image field in query<br />\r\n12.2 Add HTML image tag<br />\r\n12.3 Output</p>\r\n\r\n<p><strong>13.0 How to run the source code?</strong><br />\r\n14.0 Download LEVEL 1 source code<br />\r\n15.0 Download LEVEL 2 source code<br />\r\n16.0 Download LEVEL 3 source code<br />\r\n17.0 Download ALL LEVELS</p>\r\n\r\n<p>18.0 Online resources<br />\r\n19.0 What&#39;s next?<br />\r\n20.0 Related tutorials<br />\r\n21.0 Notes</p>\r\n\r\n<div class=\"adinserter-code-block adinserter-code-block-33\" style=\"clear:both; margin-bottom:8px; margin-left:8px; margin-right:8px; margin-top:8px\">\r\n<div class=\"feedback_box\">\r\n<p>Before we start, we want to let you know that your feedback is important to us!</p>\r\n\r\n<p>If there&#39;s a section in this tutorial that is confusing or hard to understand, we consider it as a problem. Please let us know. We will solve this problem within 24 hours.</p>\r\n\r\n<p>Send a detailed description of the problem to my email to <strong>MIKE@CODEOFANINJA.COM</strong> today. Use &quot;codeofaninja.com improvement&quot; as the subject of your email. Thank you!</p>\r\n</div>\r\n</div>\r\n\r\n<h2>1.0 Overview</h2>\r\n\r\n<p>This tutorial is for your if:</p>\r\n\r\n<ul>\r\n	<li>You need a high quality and updated reference for a PHP CRUD tutorial.</li>\r\n	<li>You need to learn how to do CRUD operations in PHP and MySQL.</li>\r\n	<li>You are beginner in this kind of PHP web programming.</li>\r\n</ul>\r\n\r\n<p>Coding CRUD with PHP and MySQL is one of the basics. PHP web programmers must be able to code it with less effort. We can perform this task using any of the three PHP Database extensions:</p>\r\n\r\n<ol>\r\n	<li>Using the <a href=\"http://php.net/manual/en/intro.mysql.php\" rel=\"noopener\" target=\"_blank\">MySQL extension</a>.</li>\r\n	<li>Using the <a href=\"http://php.net/manual/en/intro.mysqli.php\" rel=\"noopener\" target=\"_blank\">MySQLi extension</a>.</li>\r\n	<li>Using the <a href=\"http://php.net/manual/en/ref.pdo-mysql.php\" rel=\"noopener\" target=\"_blank\">PDO extension</a>.</li>\r\n</ol>\r\n\r\n<p>PHP 5.5 deprecated the MySQL extension. It is not recommended to use these days.</p>\r\n\r\n<p>If you are programming with PHP, you&#39;ll have to use either MySQLi (i means improved) or PDO extension.</p>\r\n\r\n<p>With that in mind, we will use the PDO extension. It is the newest and actively developed way of programming these CRUD grids.</p>\r\n\r\n<h2>2.0 PHP CRUD tutorial program output</h2>\r\n\r\n<div class=\"adinserter-code-block adinserter-code-block-10\" style=\"clear:both; margin-bottom:8px; margin-left:8px; margin-right:8px; margin-top:8px\">\r\n<p>We usually have three LEVELS of source code output. But WHY? Because I believe in &quot;Learning Progression&quot; to ensure efficient learning. <a href=\"https://www.codeofaninja.com/2016/07/learning-progression.html\" target=\"_blank\">Learn more</a></p>\r\n</div>\r\n\r\n<p>Below are some screenshots of our script&#39;s output. You can click an image to view the larger version of it. Use the left and right arrow to navigate through the screenshots.</p>\r\n\r\n<p>Please note that the following images are just output previews. New features might be added already the time you are reading this.</p>\r\n\r\n<h3>4.2 Create the database table</h3>\r\n\r\n<p>Next, run the following SQL code. This is to create our &quot;products&quot; database table. If you&#39;re not sure how to do this, take a look at <a href=\"https://www.youtube.com/watch?v=4c50g_RXPZo\" rel=\"noopener\" target=\"_blank\">this resource</a>.</p>\r\n\r\n<pre class=\"brush:sql;\">\r\n--\r\n-- Table structure for table `products`\r\n--\r\n \r\nCREATE TABLE IF NOT EXISTS `products` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `name` varchar(128) NOT NULL,\r\n  `description` text NOT NULL,\r\n  `price` double NOT NULL,\r\n  `created` datetime NOT NULL,\r\n  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=9 ;</pre>\r\n\r\n<h3>4.3 Dump sample data on the table</h3>\r\n\r\n<p>Again, run the following SQL code on your PhpMyAdmin. This will insert the sample data or record on our &#39;products&#39; database table.</p>\r\n\r\n<h3>4.4 Create database connection file</h3>\r\n\r\n<p>This section will answer the question: how to connect to MySQL database with PDO?</p>\r\n\r\n<ul>\r\n	<li>Create &quot;php-beginner-crud-level-1&quot; folder and open it.</li>\r\n	<li>Create &quot;config&quot; folder and open it.</li>\r\n	<li>Create database.php file.</li>\r\n	<li>Place the following code inside it.</li>\r\n</ul>\r\n\r\n<pre class=\"brush:php;\">\r\n&lt;?php\r\n// used to connect to the database\r\n$host = &quot;localhost&quot;;\r\n$db_name = &quot;php_beginner_crud_level_1&quot;;\r\n$username = &quot;root&quot;;\r\n$password = &quot;&quot;;\r\n  \r\ntry {\r\n    $con = new PDO(&quot;mysql:host={$host};dbname={$db_name}&quot;, $username, $password);\r\n}\r\n  \r\n// show error\r\ncatch(PDOException $exception){\r\n    echo &quot;Connection error: &quot; . $exception-&gt;getMessage();\r\n}\r\n?&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '2018-07-29 09:21:21', '2018-07-29 07:21:21', 500000, 'e40d0920cc4ed985b28b9fc124d95dc4ae497d80-php-crud-tutorial-for-beginners.jpg', 2, 0),
(13, 'AJAX CRUD Tutorial Using jQuery, JSON and PHP ', 'Previously, we learned how to create a simple REST API in PHP. Today, we are going to learn how to create or insert, read, update and delete records with our AJAX CRUD Tutorial. We will use jQuery, JSON and PHP.', '<p><strong>Contents of this tutorial include:</strong></p>\r\n\r\n<p>1.0 Tutorial Overview<br />\r\n2.0 Program Output1<br />\r\n3.0 Set Up The REST API</p>\r\n\r\n<p><strong>4.0 Basic Files &amp; Folders</strong><br />\r\n4.1 File Structure<br />\r\n4.2 Create index.html file<br />\r\n4.3 Enable Bootstrap<br />\r\n4.4 Create custom CSS file<br />\r\n4.5 Download jQuery library and Bootbox<br />\r\n4.6 Create app.js file<br />\r\n4.7 Create &quot;products&quot; scripts<br />\r\n4.8 Output</p>\r\n\r\n<p><strong>5.0 How To Read JSON Data Using jQuery AJAX?</strong><br />\r\n5.1 Show products on first page load<br />\r\n5.2 Show products on click of a button<br />\r\n5.3 Create showProducts() function<br />\r\n5.4 Get list of products<br />\r\n5.5 Add &quot;Create Product&quot; button<br />\r\n5.6 Build HTML table<br />\r\n5.7 Build table row per record<br />\r\n5.8 Inject to page content<br />\r\n5.9 Change page title<br />\r\n5.10 Output</p>\r\n\r\n<p><strong>6.0 How To Create or Insert Data Using jQuery AJAX?</strong><br />\r\n6.1 Handle &quot;Create Product&quot; Button Click<br />\r\n6.2 Get list of categories from API<br />\r\n6.3 Build &quot;categories option&quot; select field<br />\r\n6.4 Add &quot;Read Products&quot; button<br />\r\n6.5 Build &quot;Create Product&quot; HTML Form<br />\r\n6.6 Show &quot;Create Product&quot; form and change page title<br />\r\n6.7 Handle &quot;create product&quot; form submit<br />\r\n6.8 Get form data<br />\r\n6.9 Send data to server<br />\r\n6.10 Output</p>\r\n\r\n<p><strong>7.0 How To Read One Data Using jQuery AJAX?</strong><br />\r\n7.1 Handle &quot;read one&quot; button click<br />\r\n7.2 Get product ID<br />\r\n7.3 Read one record from API<br />\r\n7.4 Add &quot;read products&quot; button<br />\r\n7.5 Show record data in HTML table<br />\r\n7.6 Show &quot;Read One Product&quot; HTML table and change page title<br />\r\n7.7 Output</p>\r\n\r\n<p><strong>8.0 How To Update Data Using jQuery AJAX?</strong><br />\r\n8.1 Handle &quot;udpate product&quot; button click<br />\r\n8.2 Get product ID<br />\r\n8.3 Read product information<br />\r\n8.4 Get list of categories<br />\r\n8.5 Add &quot;Read Products&quot; button<br />\r\n8.6 Build &quot;Update Product&quot; form<br />\r\n8.7 Show &quot;Update Product&quot; form and change page title<br />\r\n8.8 Handle &quot;udpate product&quot; form submission<br />\r\n8.9 Get form data<br />\r\n8.10 Send form data to server<br />\r\n8.11 Output</p>\r\n\r\n<p><strong>9.0 How To Delete Data Using jQuery AJAX?</strong><br />\r\n9.1 Handle &quot;Delete Product&quot; button click<br />\r\n9.2 Get product ID<br />\r\n9.3 Show &quot;delete confirmation&quot; dialog box<br />\r\n9.4 Delete record using API<br />\r\n9.5 Output</p>\r\n\r\n<p><strong>10.0 How To Search Data Using jQuery AJAX?</strong><br />\r\n10.1 Include two JS file in index.html<br />\r\n10.2 Create products.js file<br />\r\n10.3 Create search-product.js file<br />\r\n10.4 Change read-products.js<br />\r\n10.5 Output</p>\r\n\r\n<p><strong>11.0 How To Paginate Data Using jQuery AJAX?</strong><br />\r\n11.1 Change JSON URL<br />\r\n11.2 Show products using JSON URL<br />\r\n11.3 Add Pagination HTML<br />\r\n11.5 Output</p>\r\n\r\n<p>12.0 How To Run The Source Code?<br />\r\n13.0 Download LEVEL 1 Source Code<br />\r\n14.0 Download LEVEL 2 Source Code<br />\r\n15.0 Download LEVEL 3 Source Code<br />\r\n16.0 Download ALL LEVELS</p>\r\n\r\n<p>17.0 What&#39;s Next?<br />\r\n18.0 Related Tutorials<br />\r\n19.0 Notes</p>\r\n\r\n<pre class=\\\"brush:jscript;gutter:false;toolbar:false;\\\">\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang=&quot;en&quot;&gt;\r\n&lt;head&gt;\r\n \r\n    &lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n \r\n    &lt;title&gt;Read Products&lt;/title&gt;\r\n \r\n    &lt;!-- bootstrap CSS --&gt;\r\n    &lt;link href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot; crossorigin=&quot;anonymous&quot;&gt;\r\n \r\n    &lt;!-- custom CSS --&gt;\r\n    &lt;link href=&quot;app/assets/css/style.css&quot; rel=&quot;stylesheet&quot; /&gt;\r\n \r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n \r\n&lt;!-- our app will be injected here --&gt;\r\n&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;\r\n \r\n&lt;!-- jQuery library --&gt;\r\n&lt;script src=&quot;app/assets/js/jquery.js&quot;&gt;&lt;/script&gt;\r\n \r\n&lt;!-- bootstrap JavaScript --&gt;\r\n&lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot; integrity=&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;\r\n \r\n&lt;!-- bootbox for confirm pop up --&gt;\r\n&lt;script src=&quot;app/assets/js/bootbox.min.js&quot;&gt;&lt;/script&gt;\r\n \r\n&lt;!-- app js script --&gt;\r\n&lt;script src=&quot;app/app.js&quot;&gt;&lt;/script&gt;\r\n \r\n&lt;!-- products scripts --&gt;\r\n&lt;script src=&quot;app/products/read-products.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;app/products/create-product.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;app/products/read-one-product.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;app/products/update-product.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;app/products/delete-product.js&quot;&gt;&lt;/script&gt;\r\n \r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '2018-07-29 16:15:09', '2018-07-29 09:15:09', 34444, 'fdaccb9c8524f2549d7fe805681cc71d6d0ecade-ajax-crud-tutorial-step-by-step-guide.jpg', 1, 0),
(14, 'PHP Login Script with Session Tutorial – Step by Step Guide! ', 'Previously, we learned how to create, read, update and delete database records on our PHP OOP CRUD tutorial. Today, we will put some of that knowledge to work by building a simple PHP login script with session.', '<p><strong>This post has the following contents:</strong></p>\r\n\r\n<p>1.0 Overview<br />\r\n2.0 Program output<br />\r\n3.0 File structure</p>\r\n\r\n<p><strong>4.0 Prepare the database</strong><br />\r\n4.1 Create a database<br />\r\n4.2 Run SQL for users table<br />\r\n4.3 Run SQL for user accounts<br />\r\n4.4 Create database connection file<br />\r\n4.5 Create user object file<br />\r\n6.5 Output</p>\r\n\r\n<p><strong>5.0 Prepare basic settings</strong><br />\r\n5.1 Create config file<br />\r\n5.2 Create login checker file<br />\r\n5.3 Create .htaccess file<br />\r\n5.4 Output</p>\r\n\r\n<p><strong>6.0 Create the template files</strong><br />\r\n6.1 Create navigation bar<br />\r\n6.2 Show logout button<br />\r\n6.3 Show login and register buttons<br />\r\n6.4 Create page header<br />\r\n6.5 Create page footer<br />\r\n6.6 Customer section custom CSS<br />\r\n6.7 Output</p>\r\n\r\n<p><strong>7.0 Create login form</strong><br />\r\n7.1 Include basic settings<br />\r\n7.2 Login form HTML<br />\r\n7.3 Login form output<br />\r\n7.4 Add alert message<br />\r\n7.5 Alert message output<br />\r\n7.6 If user submitted the form<br />\r\n7.7 Check if email exists<br />\r\n7.8 Add emailExists() method<br />\r\n7.9 Validate login credentials<br />\r\n7.10 Customer&rsquo;s index page<br />\r\n7.11 Logout file<br />\r\n7.12 Output</p>\r\n\r\n<p><strong>8.0 Create registration form</strong><br />\r\n8.1 Create register page<br />\r\n8.2 Create Utils class<br />\r\n8.3 Registration form HTML<br />\r\n8.4 If registration form was submitted<br />\r\n8.5 Create new user<br />\r\n8.6 User object create() method<br />\r\n8.7 Add showError() method<br />\r\n8.8 Output</p>\r\n\r\n<p><strong>9.0 Admin section</strong><br />\r\n9.1 Create admin index page<br />\r\n9.2 Create navigation bar<br />\r\n9.3 Create page header<br />\r\n9.4 Create page footer<br />\r\n9.5 Admin section custom CSS<br />\r\n9.6 Create login checker file<br />\r\n9.7 Output</p>\r\n\r\n<p><strong>10.0 Show registered users</strong><br />\r\n10.1 Create &quot;read users&quot; file<br />\r\n10.2 Add readAll() method in user object<br />\r\n10.3 Create &quot;read users&quot; template file<br />\r\n10.4 Add countAll() method in user object<br />\r\n10.5 Paginate list of users<br />\r\n10.6 Output</p>\r\n\r\n<p><strong>11.0 How to validate email address?</strong><br />\r\n11.1 Change account status<br />\r\n11.2 Add access code field<br />\r\n11.3 Add getToken() method<br />\r\n11.4 Change create() method<br />\r\n11.5 Add access_code property<br />\r\n11.6 Send verification email<br />\r\n11.7 Add sendEmailViaPhpMail() method<br />\r\n11.8 Output<br />\r\n11.9 Create verification file<br />\r\n11.10 Add updateStatusByAccessCode() method<br />\r\n11.11 Output</p>\r\n\r\n<p><strong>12.0 PHP forgot password form</strong><br />\r\n12.1 Add forgot password link<br />\r\n12.2 Login page new output<br />\r\n12.3 Create &ldquo;forgot password&rdquo; page<br />\r\n12.4 Forgot password page output<br />\r\n12.5 Add post code<br />\r\n12.6 Add updateAccessCode() method<br />\r\n12.7 Output</p>\r\n\r\n<p><strong>13.0 PHP reset password form</strong><br />\r\n13.1 Create &ldquo;reset password&rdquo; page<br />\r\n13.2 Check access code<br />\r\n13.3 Add accessCodeExists() method<br />\r\n13.4 Add &ldquo;reset password&rdquo; form<br />\r\n13.5 Add post code<br />\r\n13.6 Add updatePassword() method<br />\r\n13.7 Output</p>\r\n\r\n<p><strong>14.0 How To Run The Source Code?</strong><br />\r\n15.0 Download LEVEL 1 Source Code<br />\r\n16.0 Download PHP Login System</p>\r\n\r\n<p>17.0 What&rsquo;s Next?<br />\r\n18.0 Related Tutorials<br />\r\n19.0 Notes</p>\r\n\r\n<div class=\"adinserter-code-block adinserter-code-block-33\" style=\"clear:both; margin-bottom:8px; margin-left:8px; margin-right:8px; margin-top:8px\">\r\n<div class=\"feedback_box\">\r\n<p>Before we start, we want to let you know that your feedback is important to us!</p>\r\n\r\n<p>If there&#39;s a section in this tutorial that is confusing or hard to understand, we consider it as a problem. Please let us know. We will solve this problem within 24 hours.</p>\r\n\r\n<p>Send a detailed description of the problem to my email to <strong>MIKE@CODEOFANINJA.COM</strong> today. Use &quot;codeofaninja.com improvement&quot; as the subject of your email. Thank you!</p>\r\n</div>\r\n</div>\r\n\r\n<h2>1.0 Overview</h2>\r\n\r\n<p>Login? Logout? Sign Up or Register? We see this functionality in almost every website we use today. Facebook, GMail and Twitter are just some examples.</p>\r\n\r\n<p>If you want to become a web programmer, this is one of the most basic skills that you need to learn. If you haven&#39;t, today is a great day for you. We have some good news.</p>\r\n\r\n<p>In this tutorial, we will learn how to build a simple PHP login script. This will help you create the web app of your dreams. Just like <a href=\"https://www.codeofaninja.com/about-us\" rel=\"noopener\" target=\"_blank\">how we build ours</a>.</p>\r\n\r\n<p>We will cover how to create a login form, registration form, customer section, admin section, list of registered users, logout and more. You will learn useful web programming techniques as well.</p>\r\n\r\n<h2>2.0 Program Output</h2>\r\n\r\n<h3>2.1 LEVEL 1 Source Code Output</h3>\r\n\r\n<h2>3.0 File structure</h2>\r\n\r\n<p>At the end of this tutorial, we will have the following folders and files. You will learn the purpose of each of these files and folders as we go along the tutorial.</p>\r\n\r\n<p>├─ admin/<br />\r\n├────── index.php<br />\r\n├────── layout_foot.php<br />\r\n├────── layout_head.php<br />\r\n├────── login_checker.php<br />\r\n├────── navigation.php<br />\r\n├────── paging.php<br />\r\n├────── read_users_template.php<br />\r\n├────── read_users.php<br />\r\n├─── config/<br />\r\n├────── core.php<br />\r\n├────── database.php<br />\r\n├─── images/<br />\r\n├────── login_icon.png<br />\r\n├─ libs/<br />\r\n├────── css/<br />\r\n├───────── admin.css<br />\r\n├───────── customer.css<br />\r\n├────── php/<br />\r\n├───────── utils.php<br />\r\n├─ objects/<br />\r\n├────── user.php<br />\r\n├─ .htaccess<br />\r\n├─ index.php<br />\r\n├─ layout_foot.php<br />\r\n├─ layout_head.php<br />\r\n├─ login_checker.php<br />\r\n├─ login.php<br />\r\n├─ logout.php<br />\r\n├─ navigation.php<br />\r\n├─ register.php</p>\r\n\r\n<h2>4.0 Prepare the database</h2>\r\n\r\n<h3>4.1 Create a database</h3>\r\n\r\n<p>Open a new browser tab and go to PhpMyadmin. The address is <a href=\"http://localhost/phpmyadmin\" rel=\"noopener\" target=\"_blank\">http://localhost/phpmyadmin</a>.</p>\r\n\r\n<p>Create a database. Database name is: <strong>php_login_system</strong></p>\r\n\r\n<h3>4.2 Run SQL for users table</h3>\r\n\r\n<p>In PhpMyAdmin, click the database name. Go to SQL tab. Create the &quot;users&quot; table by running the following SQL statement.</p>\r\n\r\n<pre class=\"brush:sql;toolbar:false;collapse:true;\">\r\nCREATE TABLE `users` (\r\n  `id` int(11) NOT NULL,\r\n  `firstname` varchar(32) NOT NULL,\r\n  `lastname` varchar(32) NOT NULL,\r\n  `email` varchar(64) NOT NULL,\r\n  `contact_number` varchar(64) NOT NULL,\r\n  `address` text NOT NULL,\r\n  `password` varchar(512) NOT NULL,\r\n  `access_level` varchar(16) NOT NULL,\r\n  `access_code` text NOT NULL,\r\n  `status` int(11) NOT NULL COMMENT &#39;0=pending,1=confirmed&#39;,\r\n  `created` datetime NOT NULL,\r\n  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\r\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT=&#39;admin and customer users&#39;;</pre>\r\n\r\n<h3>4.4 Create database connection file</h3>\r\n\r\n<p>This class is used for connecting to database.</p>\r\n\r\n<p>I assume you are using XAMPP. Go to the root directory. In my case, it is the &quot;C:\\xampp\\htdocs&quot; directory.</p>\r\n\r\n<p>We will create our project&#39;s folder. Create &quot;php-login-script-level-1&quot; folder. Open that folder.</p>\r\n\r\n<p>Create &quot;config&quot; folder and open it. Create database.php file. Place the following code.</p>\r\n\r\n<pre class=\"brush:php;\">\r\n&lt;?php\r\n// used to get mysql database connection\r\nclass Database{\r\n \r\n    // specify your own database credentials\r\n    private $host = &quot;localhost&quot;;\r\n    private $db_name = &quot;php_login_system&quot;;\r\n    private $username = &quot;root&quot;;\r\n    private $password = &quot;&quot;;\r\n    public $conn;\r\n \r\n    // get the database connection\r\n    public function getConnection(){\r\n \r\n        $this-&gt;conn = null;\r\n \r\n        try{\r\n            $this-&gt;conn = new PDO(&quot;mysql:host=&quot; . $this-&gt;host . &quot;;dbname=&quot; . $this-&gt;db_name, $this-&gt;username, $this-&gt;password);\r\n        }catch(PDOException $exception){\r\n            echo &quot;Connection error: &quot; . $exception-&gt;getMessage();\r\n        }\r\n \r\n        return $this-&gt;conn;\r\n    }\r\n}\r\n?&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '2018-07-31 03:09:22', '2018-07-31 01:09:22', 50000, 'da77d61ccb4fdcedc06ec9afe5e5a9fb52eccfcc-php-login-script-1.jpg', 2, 0);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`category_id`);

--
-- Indexes for table `courses`
--
ALTER TABLE `courses`
  ADD PRIMARY KEY (`course_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `categories`
--
ALTER TABLE `categories`
  MODIFY `category_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `courses`
--
ALTER TABLE `courses`
  MODIFY `course_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=15;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
